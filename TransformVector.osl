// Transform Tangent Normal Shader - applies a matrix transform to a tangent space normal map
/*
   Copyright 2023 Edward Darby Edelen

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

shader TransformTangentVector(
    vector vector_input = 0
    [[string label = "Vector Input"]],
    vector state_tangent_in = 0
    [[string label="Source Tangent In"]],
    matrix dst_tangent_space = 0
    [[string label = "Destination Tangent Space"]],
    output vector transformed_vector = 0
)
{
    vector T = select(normalize(dPdu), state_tangent_in, isconnected(state_tangent_in));
    vector B = cross(T, Ng);

    matrix TBN = isconnected(state_tangent_in) ? matrix(
        T.x,  T.y,  T.z,  0,
        B.x,  B.y,  B.z,  0,
        Ng.x, Ng.y, Ng.z, 0,
        0,    0,    0,    1
    ) : matrix(1);

    vector result = transform(dst_tangent_space / TBN, vector_input);

    transformed_vector = result;
}